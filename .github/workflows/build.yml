name: Build Hasura Binary

on:
  push:
    branches: [ "**" ]
#  pull_request:
#    branches: [ "**" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set CURRENT_VERSION
        run: echo "12345" > server/CURRENT_VERSION

      - name: Install System Dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc make musl-dev curl unixodbc-dev

      - name: Setup Haskell (GHC & Cabal)
        uses: haskell/actions/setup@v2
        with:
          ghc-version: '9.2'
          cabal-version: '3.12'

      - name: Cache Cabal Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-cabal-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-cabal-

#      - name: Cache Haskell Dependencies
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.cabal/store
#            ~/.ghc
#            dist-newstyle
#          key: ${{ runner.os }}-haskell-${{ hashFiles('cabal.project.freeze') }}
#          restore-keys: |
#            ${{ runner.os }}-haskell-

      - name: Update Cabal Version
        run: |
          ghcup install cabal 3.12
          ghcup set cabal 3.12
          cabal --version

      - name: Install Haskell Dependencies
        run: |
          cabal update
          cabal build all

      - name: Build Hasura
        run: |
          cabal update
          cabal build exe:server

      - name: Debug Build Output
        run: |
          echo "Checking dist-newstyle for hasura binary..."
          if ! find dist-newstyle -type f -name "hasura"; then
            echo "hasura binary not found"
            exit 1
          fi

      - name: Debug Cabal Build Output
        run: find dist-newstyle -type f | tee build_files.log

#      - name: Move Binary to bin
#        run: |
#          mkdir -p bin
#          if ! cp "$(cabal list-bin exe:hasura)" bin/hasura; then
#            echo "Failed to copy hasura binary"
#            exit 1
#          fi

      - name: Move Binary to bin
        run: |
          mkdir -p bin
          BINARY_PATH=$(find dist-newstyle -type f -name "server" | head -n 1)
          if [ -z "$BINARY_PATH" ]; then
            echo "Error: server binary not found"
            exit 1
          fi
          cp "$BINARY_PATH" bin/server

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-binary
          path: server/hasura
